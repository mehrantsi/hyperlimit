name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libhiredis-dev build-essential cmake

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install hiredis
        brew install cmake --formula

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        vcpkg install hiredis:x64-windows
        echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" >> $env:GITHUB_ENV
        choco install cmake -y
        
        # Add vcpkg include and lib paths
        echo "INCLUDE=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\include;$env:INCLUDE" >> $env:GITHUB_ENV
        echo "LIB=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\lib;$env:LIB" >> $env:GITHUB_ENV
        
        # Add MSVC intrinsics and flags
        echo "CXXFLAGS=/std:c++17 /O2 /DWIN32 /D_WINDOWS /EHsc /D__builtin_clzll=__lzcnt64 /D__builtin_prefetch=_mm_prefetch /I$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\include" >> $env:GITHUB_ENV
        
        # Add required headers for intrinsics
        echo "#include <intrin.h>" > msvc_intrinsics.h
        echo "#include <immintrin.h>" >> msvc_intrinsics.h
        echo "#define _MM_HINT_T0 _MM_HINT::_MM_HINT_T0" >> msvc_intrinsics.h
        
        # Copy the intrinsics header to include path
        copy msvc_intrinsics.h $env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\include\

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build
      env:
        VCPKG_ROOT: ${{ env.VCPKG_ROOT }}

    - name: Run tests
      run: |
        # Run core tests
        npm run test:core

        # Run middleware tests
        npm run test:express
        npm run test:fastify
        npm run test:hyperexpress

    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.os }}-node-${{ matrix.node-version }}
        path: coverage/ 