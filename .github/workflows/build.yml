name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
        include:
          - os: ubuntu-latest
            node-version: 20.x
            is_primary: true

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libhiredis-dev build-essential cmake

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install hiredis

      - name: Install system dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          vcpkg install hiredis:x64-windows
          echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" >> $env:GITHUB_ENV
          choco install cmake -y

      - name: Install dependencies
        run: |
          npm install -g prebuildify
          npm ci

      - name: Build native module
        run: prebuildify --napi
        env:
          VCPKG_ROOT: ${{ env.VCPKG_ROOT }}

      - name: Upload prebuilt binaries
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds-${{ matrix.os }}
          path: prebuilds/

      # Only create and publish packages from Ubuntu
      - name: Download all prebuilds
        if: matrix.is_primary
        uses: actions/download-artifact@v3
        with:
          path: prebuilds-all

      - name: Merge prebuilds
        if: matrix.is_primary
        run: |
          mkdir -p prebuilds
          cp -r prebuilds-all/*/* prebuilds/

      - name: Create packages
        if: matrix.is_primary
        run: |
          # Create core package
          mkdir -p dist/hyperlimit
          cp -r prebuilds package.json README.md LICENSE dist/hyperlimit/
          cd dist/hyperlimit
          npm pack
          cd ../..

          # Create Express middleware package
          mkdir -p dist/hyperlimit-express
          cp -r src/middleware-express.js package.json README.md LICENSE dist/hyperlimit-express/
          cd dist/hyperlimit-express
          # Update package.json for Express middleware
          node -e "
            const pkg = require('./package.json');
            pkg.name = 'hyperlimit-express';
            pkg.description = 'Express middleware for HyperLimit rate limiter';
            pkg.main = 'middleware-express.js';
            pkg.dependencies = {
              'hyperlimit': pkg.version,
              'express': '^4.17.1'
            };
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          npm pack
          cd ../..

          # Create Fastify middleware package
          mkdir -p dist/hyperlimit-fastify
          cp -r src/middleware-fastify.js package.json README.md LICENSE dist/hyperlimit-fastify/
          cd dist/hyperlimit-fastify
          # Update package.json for Fastify middleware
          node -e "
            const pkg = require('./package.json');
            pkg.name = 'hyperlimit-fastify';
            pkg.description = 'Fastify middleware for HyperLimit rate limiter';
            pkg.main = 'middleware-fastify.js';
            pkg.dependencies = {
              'hyperlimit': pkg.version,
              'fastify': '^4.0.0'
            };
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          npm pack
          cd ../..

          # Create HyperExpress middleware package
          mkdir -p dist/hyperlimit-hyperexpress
          cp -r src/middleware-hyperexpress.js package.json README.md LICENSE dist/hyperlimit-hyperexpress/
          cd dist/hyperlimit-hyperexpress
          # Update package.json for HyperExpress middleware
          node -e "
            const pkg = require('./package.json');
            pkg.name = 'hyperlimit-hyperexpress';
            pkg.description = 'HyperExpress middleware for HyperLimit rate limiter';
            pkg.main = 'middleware-hyperexpress.js';
            pkg.dependencies = {
              'hyperlimit': pkg.version,
              'hyper-express': '^6.0.0'
            };
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          npm pack
          cd ../..

      - name: Publish packages
        if: matrix.is_primary
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: |
          cd dist/hyperlimit && npm publish --access public
          cd ../hyperlimit-express && npm publish --access public
          cd ../hyperlimit-fastify && npm publish --access public
          cd ../hyperlimit-hyperexpress && npm publish --access public 